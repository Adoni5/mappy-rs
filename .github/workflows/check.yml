# Taken from https://github.com/jonhoo/rust-ci-conf/blob/main/.github/workflows/check.yml
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * SUN'
name: check
jobs:

  pre-commit:
    name: "pre-commit"
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
      - uses: "dtolnay/rust-toolchain@stable"
      - uses: "pre-commit/action@v3.0.0"
  # fmt:
  #   runs-on: ubuntu-latest
  #   name: stable / fmt
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         components: rustfmt
  #     - name: cargo fmt --check
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: fmt
  #         args: --check
  # clippy:
  #   runs-on: ubuntu-latest
  #   name: ${{ matrix.toolchain }} / clippy
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       toolchain: [stable, beta]
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Install ${{ matrix.toolchain }}
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.toolchain }}
  #         default: true
  #         components: clippy
  #     - name: cargo clippy
  #       uses: actions-rs/clippy-check@v1
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
  # doc:
  #   runs-on: ubuntu-latest
  #   name: nightly / doc
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Install nightly
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: nightly
  #         default: true
  #     - name: cargo doc
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: doc
  #         args: --no-deps --all-features
  #       env:
  #         RUSTDOCFLAGS: --cfg docsrs
  # hack:
  #   runs-on: ubuntu-latest
  #   name: ubuntu / stable / features
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true
  #     - name: Install stable
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #     - name: cargo install cargo-hack
  #       uses: taiki-e/install-action@cargo-hack
  #     - name: cargo hack
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: hack
  #         args: check --lib --tests --no-default-features
  #     - name: cargo test
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: hack
  cargo-test:
    name: cargo test
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo test --no-default-features

  python-test:
    name: "Test Python ${{ matrix.python-version }}"
    runs-on: "ubuntu-latest"
    needs: pre-commit
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-python@v4"
        with:
          python-version: "${{ matrix.python-version }}"
      - uses: "dtolnay/rust-toolchain@stable"
      - name: "Install dependencies"
        run: |
          set -xe
          python -VV
          python -m site
          python -m pip install --upgrade pip
          python -m pip install ".[tests]"
      - name: "Run pytest for ${{ matrix.python-version }}"
        run: "pytest"

  msrv:
    runs-on: ubuntu-latest
    needs: [cargo-test, python-test]
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.58.1] # 2021 edition requires 1.56
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.msrv }}
          default: true
      - name: cargo +${{ matrix.msrv }} check
        uses: actions-rs/cargo@v1
        with:
          command: check
