# This file is autogenerated by maturin v1.2.3
# To update, run
#
#    maturin generate-ci github --platform all
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, "aarch64"]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive' # Fetch Git submodules recursively

    # Initialize and update submodules (optional, if submodules were not initialized during checkout)
      - name: Update submodules
        run: git submodule update --init --recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i 3.8 3.9 3.10 3.11 pypy3.8 pypy3.9 pypy3.10
          sccache: 'true'
          manylinux: auto
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install mappy-rs  --no-index --find-links dist --force-reinstall
          pip install pytest
          pytest -sv
      - uses: uraimo/run-on-arch-action@v2.5.1
        name: install & test
        if: matrix.target != 'x86_64'
        with:
          arch: ${{ matrix.target }}
          githubToken: ${{ github.token }}
          install: |
            set -x
            if command -v apt-get &> /dev/null; then
              echo "installing python & pip with apt-get..."
              apt-get update
              apt-get install -y --no-install-recommends python3 python3-pip python3-venv
            else
              echo "installing python & pip with apk..."
              apk update
              apk add python3 py3-pip
            fi
          run: |
            set -x
            python3 -m venv venv
            source venv/bin/activate
            python3 -m pip install mappy-rs  --no-index --find-links dist --force-reinstall
            python3 -m pip install pytest
            python3 -m pytest -sv
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-13
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive' # Fetch Git submodules recursively

    # Initialize and update submodules (optional, if submodules were not initialized during checkout)
      - name: Update submodules
        run: git submodule update --init --recursive
      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i 3.8 3.9 3.10 3.11 pypy3.8 pypy3.9 pypy3.10
          sccache: 'true'
      - name: Test built wheels
        if: matrix.target == 'x86_64'
        run: |
          pip install mappy-rs --no-index --find-links dist --force-reinstall
          pip install pytest
          pytest -sv
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive' # Fetch Git submodules recursively

    # Initialize and update submodules (optional, if submodules were not initialized during checkout)
      - name: Update submodules
        run: git submodule update --init --recursive
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, macos, sdist]
    permissions:
      # Used to upload release artifacts
      contents: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
