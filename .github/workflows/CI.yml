name: CI

on:
  create:
  pull_request:
  push:
    branches: [main]

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: messense/maturin-action@v1
      with:
        manylinux: auto
        command: build
        args: --release --sdist -o target/dist --find-interpreter
        maturin-version: v0.14.5
        container: ghcr.io/adoni5/manylinuxclang:latest
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: target/dist


  # windows:
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: messense/maturin-action@v1
  #     with:
  #       command: build
  #       args: --release -o dist --find-interpreter
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: wheels
  #       path: dist

  # macos:
  #   runs-on: macos-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: messense/maturin-action@v1
  #     with:
  #       command: build
  #       args: --release -o dist --universal2 --find-interpreter
  #   - name: Upload wheels
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: wheels
  #       path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    # needs: [ macos, windows, linux ]
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *

# Taken from https://github.com/jonhoo/rust-ci-conf/blob/main/.github/workflows/check.yml

  fmt:
    runs-on: ubuntu-latest
    name: stable / fmt
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt
        run: cargo fmt --check

  doc:
    runs-on: ubuntu-latest
    name: nightly / doc
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly
          components: doc
        run: cargo doc --no-deps --all-features

        env:
          RUSTDOCFLAGS: --cfg docsrs
                
  hack:
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: ubuntu / stable / features
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install stable
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: cargo install cargo-hack
        uses: taiki-e/install-action@cargo-hack
      - name: cargo hack
        run: cargo hack --feature-powerset check --lib --tests

  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.57.0] # 2021 edition requires 1.56
    name: ubuntu / ${{ matrix.msrv }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install ${{ matrix.toolchain }}
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check
        
